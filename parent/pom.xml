<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	                    http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>es.test</groupId>
	<artifactId>webapp-parent</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jersey.version>2.29</jersey.version>
		<hk2.version>2.5.0</hk2.version>
		<guice.version>4.2.2</guice.version>
		<tomcat.version>8.5.43</tomcat.version>
		<querydsl.version>4.2.1</querydsl.version>
		<hibernate.version>4.3.11.Final</hibernate.version>

		<servlet.port>8080</servlet.port>
	</properties>

	<!-- Dependencies' and plugins' repositories -->
	<repositories>
		<repository>
			<id>ECC</id>
			<url>https://github.com/ElectronicChartCentre/ecc-mvn-repo/raw/master/releases</url>
		</repository>

		<repository>
			<id>sonatype-snapshots</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>sonatype-snapshots</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- Jersey -->
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet-core</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-entity-filtering</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<!-- <dependency> <groupId>com.sun.jersey.jersey-test-framework</groupId> 
				<artifactId>jersey-test-framework-grizzly2</artifactId> <version>${jersey.version}</version> 
				<scope>test</scope> </dependency> -->
			<!-- for external testing -->
			<!-- <dependency> <groupId>com.sun.jersey.jersey-test-framework</groupId> 
				<artifactId>jersey-test-framework-external</artifactId> <version>${jersey.version}</version> 
				<scope>test</scope> </dependency> -->

			<!-- HK2 -->
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-api</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-locator</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-utils</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-extras</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>guice-bridge</artifactId>
				<version>${hk2.version}</version>
			</dependency>

			<!-- Quartz -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>2.3.0</version>
			</dependency>

			<!-- Guice -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-servlet</artifactId>
				<version>${guice.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.6</version>
			</dependency>

			<!-- JAXB RI -->

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.1</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.1.0.Final</version>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20180813</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.9.9</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.9.10.3</version>
			</dependency>


			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>0.9.11</version>
			</dependency>


			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>1.7</version>
			</dependency>


			<dependency>
				<groupId>no.ecc.vectortile</groupId>
				<artifactId>java-vector-tile</artifactId>
				<version>1.3.5</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>


			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>3.8.1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<dependency>
				<groupId>com.querydsl</groupId>
				<artifactId>querydsl-core</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>

			<!-- Because this is a web app, we also have a dependency on the servlet 
				api. -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- Hibernate uses slf4j for logging, for our purposes here use the simple 
				backend -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>1.7.28</version>
			</dependency>

			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.25.0-GA</version>
			</dependency>

			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.5.0</version>
			</dependency>


			<!-- Unirest is a simple lightweight â€“ fluent style HTTP request library -->
			<dependency>
				<groupId>com.konghq</groupId>
				<artifactId>unirest-java</artifactId>
				<version>2.3.17</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.konghq</groupId>
				<artifactId>unirest-objectmapper-jackson</artifactId>
				<version>2.3.17</version>
			</dependency>
			<dependency>
				<groupId>com.konghq</groupId>
				<artifactId>unirest-object-mappers-gson</artifactId>
				<version>2.3.17</version>
			</dependency>

			<!-- JTwig is a very simple template engine -->
			<dependency>
				<groupId>org.jtwig</groupId>
				<artifactId>jtwig-core</artifactId>
				<version>5.87.0.RELEASE</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>

				<!-- Add source and test directories to your project - https://www.mojohaus.org/build-helper-maven-plugin/usage.html -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<!-- Compiler Plugin: compile the sources of the project - https://maven.apache.org/plugins/maven-compiler-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>

				<!-- Surefire Plugin: unit tests - https://maven.apache.org/surefire/maven-surefire-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>

				<!-- Failsafe Plugin: integration tests - https://maven.apache.org/surefire/maven-failsafe-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>

				<!-- Checkstyle: generates a report regarding the code style used by 
					the developers - https://checkstyle.sourceforge.io/index.html - https://maven.apache.org/plugins/maven-checkstyle-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.0</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>8.23</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Cargo: allows to manipulate various type of application containers 
					- https://codehaus-cargo.github.io/cargo/Home.html - https://codehaus-cargo.github.io/cargo/Maven2+plugin.html 
					- How to install the plugin: https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Installation.html 
					- How to use the plugin on several use cases: https://codehaus-cargo.github.io/cargo/Maven2+plugin.html#Maven2plugin-gettingstarted 
					- Reference documentation for all configuration options: https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html 
					- Tips for using the plugin: https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Tips.html 
					- Archetypes: https://codehaus-cargo.github.io/cargo/Maven2+Archetypes.html 
					- Cargo properties: https://codehaus-cargo.github.io/cargo/Configuration+properties.html 
					- Tomcat 8x properties: https://codehaus-cargo.github.io/cargo/Tomcat+8.x.html -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.7.7</version>
				</plugin>

				<!-- https://maven.apache.org/plugins/maven-war-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.8.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>tomcat8x</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<!-- Build for Tomcat -->
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.cargo</groupId>
							<artifactId>cargo-maven2-plugin</artifactId>
							<configuration>
								<container>
									<containerId>tomcat8x</containerId>
									<timeout>240000</timeout>
									<systemProperties>
										<file.encoding>UTF-8</file.encoding>
										<spring.profiles.active>tomcat,datajpa</spring.profiles.active>
									</systemProperties>

									<!-- Other dependencies for Tomcat -->
									<dependencies></dependencies>

									<zipUrlInstaller>
										<url>http://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>
									</zipUrlInstaller>

									<log>${project.build.directory}/tomcat8x/cargo.log</log>
									<output>${project.build.directory}/tomcat8x/container.log</output>
									<append>false</append>
								</container>

								<!-- Configuration of the configuration -->
								<configuration>
									<configfiles>
										<configfile>
											<file>src/main/tomcat/context.xml</file>
											<todir>conf/</todir>
											<tofile>context.xml</tofile>
										</configfile>
										<configfile>
											<file>src/main/tomcat/server.xml</file>
											<todir>conf/</todir>
											<tofile>server.xml</tofile>
										</configfile>
										<configfile>
											<file>src/main/tomcat/tomcat-users.xml</file>
											<todir>conf/</todir>
											<tofile>tomcat-users.xml</tofile>
										</configfile>
									</configfiles>

									<!-- <properties>
										<cargo.start.jvmargs>
											-Xdebug
											-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
											-Xnoagent
											-Djava.compiler=NONE
										</cargo.start.jvmargs>
									</properties> -->
								</configuration>

							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

	</profiles>

</project>